<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" 
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="NicepayDAO">

<update id="updateDelSendYn" parameterType="java.util.HashMap">
	update tb_support_cms set del_send_yn = 'Y', del_send_file = #{userMemFileName}
	where cms_id in
	<foreach collection="updateDelSendList" item="item" open="(" separator="," close=")">
		#{item}
	</foreach>
</update>

<select id="selectCreateUserList" resultType="java.util.HashMap">
	SELECT 
		cms_id						/* 테이블 SEQ */
		, user_id						/* 회원등록자 ID */
		, agree_send_yn			/* 동의서 전송여부 */
		, user_send_yn				/* 회원신청 전송여부 */
		, del_target_yn				/* 회원신청 삭제대상 여부 */
		, del_send_yn				/* 회원신청 삭제 완료여부 */
		, acc_tp						/* 카드 또는 CMS 이냐.. */
		, user_name				/* 회원등록자 이름 */
		, user_phone				/* 회원등록자 폰번호 */
		, user_email					/* 회원등록자 이메일 */
		, bank_code				/* CMS회원 은행코드 */
		, bank_acc_num			/* CMS회원 입금계좌번호 */
		, bank_acc_user_nm		/* CMS회원 예금주 명 */
		, bank_acc_user_num	/* CMS회원 예금주 주민번호 */
		, card_num					/* 카드회원 카드번호 */
		, card_year_month		/* 카드회원 유효년월 */
		, sc_price					/* 입금액 */
		, sc_req_dd					/* 출금요청일 */
		, sc_cnt						/* 회차 */
		, use_yn
	FROM 
		tb_support_cms
	WHERE 1=1
		AND user_id IS NOT NULL		/* user_id는 필수 값이어여야 한다. */
		AND use_yn = 'Y'					/* 사용여부가 'Y'인 것 만 */
		AND ((acc_tp = 'S' and agree_send_yn = 'Y') OR acc_tp = 'D')			/* 출금이체동의서 전송이 완료된 사람 이거나 카드정기인 사람 조회 한다. */
		AND (user_send_yn = 'N' OR (del_target_yn = 'Y' AND del_send_yn = 'N'))			/* 회원등록이 안된 사람 및 삭제대상을 조회해 옴 된다.. */
</select>

<update id="updatePaySendYn" parameterType="java.util.HashMap">
	/* 출금정보 update 처리 */
	update tb_support_cms set pay_send_yn = 'Y', agree_num = #{agreeNum}
	where
		<if test="userId != null">
			user_id = #{userId}
		</if> 
</update>

<select id="selectCreatePayList" parameterType="java.lang.String" resultType="java.util.HashMap">
	SELECT 
		cms_id						/* 테이블 SEQ */
		, user_id						/* 회원등록자 ID */
		, acc_tp						/* 카드 또는 CMS 이냐.. */
		, user_name				/* 회원등록자 이름 */
		, user_phone				/* 회원등록자 폰번호 */
		, user_email					/* 회원등록자 이메일 */
		, bank_code				/* CMS회원 은행코드 */
		, bank_acc_num			/* CMS회원 입금계좌번호 */
		, bank_acc_user_nm		/* CMS회원 예금주 명 */
		, bank_acc_user_num	/* CMS회원 예금주 주민번호 */
		, card_num					/* 카드회원 카드번호 */
		, card_year_month		/* 카드회원 유효년월 */
		, sc_price					/* 입금액 */
		, sc_req_dd					/* 출금요청일 */
		, sc_cnt						/* 회차 */
	FROM 
		tb_support_cms
	WHERE 1=1
		AND user_id IS NOT NULL		/* user_id는 필수 값이어여야 한다. */
		AND use_yn = 'Y'					/* 사용여부가 'Y'인 것 만 */
		AND user_send_yn = 'Y'			/* 회원등록이 된 사람만 가져 와야 된다. */
		AND (bank_acc_num IS NOT NULL OR card_num IS NOT NULL) /* 계좌번호나 카드번호가 없으면 안됨 */
		AND sc_req_dd = #{intTodayPlus1Day}
</select>

<update id="updateAgreeSendYn" parameterType="java.util.HashMap">
	/* CMS이체 동의서 전송 결과를 업데이트 한다. */
	update tb_support_cms set agree_send_yn = 'Y'
	where user_id in
		<foreach collection="userIdArr" item="item" open="(" separator="," close=")">
			#{item}
		</foreach>
</update>

<select id="selectAgreeCheckList" resultType="java.util.HashMap">
	/* CMS이체 동의서 점검 대상 리스트를 가져온다. */
	SELECT 
		cms_id				/* 컬럼ID */
		, user_id				/* 사용자ID */
		, agree_send_yn 	/* 동의서전송 여부 */
	FROM 
		tb_support_cms
	WHERE 
		use_yn = 'Y'
		AND agree_send_yn = 'N'
</select>

<insert id="insertUserCmsInfo" parameterType="egovframework.phcf.common.service.ParamMap">
	/* 개인 CMS자동이체 정보를 tb_support_cms에 등록 한다(upsert 처리) */
	INSERT INTO tb_support_cms 
		( user_id, acc_tp, user_name, user_phone, user_email
			, bank_code, bank_acc_num, bank_acc_user_nm, bank_acc_user_num
			, sc_price, sc_req_dd, ins_id )
	VALUES
		( #{acc_user_id}, #{sc_price_tp}, #{user_nm}, #{acc_user_phone}, #{acc_user_email}
			, #{bankList}, #{acc_number}, #{acc_user_nm}, #{acc_user_number}
			, #{cms_sc_price}, #{sc_req_dd}, #{ins_id} )
</insert>

<select id="checkAgreeUser" parameterType="egovframework.phcf.common.service.ParamMap" resultType="java.lang.String">
	/* 등록된 회원인지 and CMS이체동의서를 전송 했는지 여부를 돌려준다. */
	SELECT 
		IF(COUNT(1) = 0, 'false', 'true') AS chk
	FROM 
		tb_support_cms
	WHERE 
		user_id = #{accUserId}
		AND del_send_yn = 'N'
		<if test='isAgreeSendYn != null and !isAgreeSendYn.equals("")'>
			AND agree_send_yn = 'Y'
		</if>
</select>

<update id="updateUserSendYn" parameterType="egovframework.phcf.common.service.ParamMap">
	update tb_support_cms set user_send_yn = 'Y', user_send_file = #{userMemFileName}
	where cms_id in
	<foreach collection="updateUserSendList" item="item" open="(" separator="," close=")">
		#{item}#
	</foreach>
</update>

<insert id="insertCardInfoProc" parameterType="egovframework.phcf.common.service.ParamMap">
	/* CMS 정보등록 테이블(tb_support_cms) 카드 정보 데이터 저장 */
	insert into tb_support_cms(
		user_id
		, acc_tp
		, user_name
		, user_phone
		, user_email
		, card_num
		, card_year_month
		, sc_price
		, sc_req_dd
	) values (
		#{user_id}
		, #{sc_price_tp}
		, #{$1}
		, concat(#{user_phone1}, #{user_phone2}, #{user_phone3})
		, concat(#{user_email1}, '@', #{user_email2})
		, concat(#{user_card_number1}, #{user_card_number2}, #{user_card_number3}, #{user_card_number4})
		, concat(#{user_card_valid_y}, #{user_card_valid_m})
		, #{sc_price}
		, #{sc_req_dd}
	)
</insert>

<insert id="insertProc" parameterType="egovframework.phcf.common.service.ParamMap">
	/* 결제성공 후 데이터 저장 */
	insert into tb_support_log(
		sp_id
		, sp_mh_tp
		, sp_tp_arr
		, user_id
		, user_tp
		, user_nm
		, user_mf
		, user_birth
		, user_phone1
		, user_phone2
		, user_phone3
		, user_email1
		, user_email2
		, user_tax_yn
		, user_add
		, user_add_detail
		, user_post
		, user_revinfo_tp_arr
		, sc_tp
		, sc_price
		, sc_price_tp
		, order_num
		, browser
		, admin_msg
	) values (
		seq_tb_support_log.next_value
		, #{sp_mh_tp}
		, #{sp_tp_arr}
		, #{user_id}
		, #{user_tp}
		, #{user_nm}
		, #{user_mf}
		, concat(#{user_birth_y}, #{user_birth_m}, #{user_birth_d})
		, #{user_phone1}
		, #{user_phone2}
		, #{user_phone3}
		, #{user_email1}
		, #{user_email2}
		, #{user_tax_yn}
		, #{user_add} 
		, #{user_add_detail}
		, #{user_post}
		, #{user_revinfo_tp_arr}
		, #{sc_tp}
		, #{sc_price}
		, #{sc_price_tp}
		, #{orderNum}
		, #{browser}
		, concat(#{user_nm}, '님 후원에 감사 드립니다.')
	)
</insert>

<select id="getOrderNumber" resultType="java.lang.String">
	/* 결제관련 주문번호 생성 쿼리 */
	SELECT 
		CONCAT('PHCF'
			, TO_CHAR(SYSDATE, 'YYYYMM')
			, LPAD((
				SELECT
					COUNT(1) + 1
				FROM 
					tb_support_log
				WHERE 
					create_dt >= CONCAT(TO_CHAR(SYSDATE, 'YYYYMM'), '01 00:00:00')
			), 5, '0')
		) AS orderNum
</select>

</mapper>